name: CICD

on:
  push:
    branches:
      - main
      - development
      - stage
      - feature/*
      - fixes/*
      - hotfix/*

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build Project
        run: mvn clean install 
      - name: Create Docker image
        run: docker build -t unitedplatform-dev .
      
      # Set up AWS CLI for ECR
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      # Tag the Docker image for ECR
      - name: Tag Docker image for ECR
        run: |
          docker tag unitedplatform-dev:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/unitedplatform-dev:latest
      
      # Push the Docker image to ECR
      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/unitedplatform-dev:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Pull Image from ECR
        run: docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/unitedplatform-dev:latest
      - name: Delete old container
        run: docker rm -f springboot-example-container
      - name: Run docker container
        run: docker run -d -p 8080:8080 --name springboot-example-container ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/unitedplatform-dev:latest
      - name: Conditional deployment based on branch
        run: |
          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            echo "Deploying to production environment"
            # Additional production deployment steps if needed
          elif [[ "${GITHUB_REF}" =~ ^refs/heads/development|^refs/heads/stage ]]; then
            echo "Deploying to staging environment"
            # Additional staging deployment steps if needed
          elif [[ "${GITHUB_REF}" =~ ^refs/heads/feature/|^refs/heads/fixes/|^refs/heads/hotfix/ ]]; then
            echo "Deploying to feature/fixes/hotfix environment"
            # Additional feature/fixes/hotfix deployment steps if needed
          else
            echo "Skipping deployment for branch: ${GITHUB_REF}"
          fi
